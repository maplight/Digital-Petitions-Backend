app: e-signatures
org: maplighttech
service: frontend-assets

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, "dev"}

functions:
  manageAssets:
    handler: lambda/dynamic-assets/index.handler
    role: AssetManagementLambdaRole

custom:
  app:
    bucketId: ${self:provider.stage}-main-bucket
    bucketName: ${self:provider.stage}-frontend-dist-bucket

  esbuild:
    minify: true
    watch:
      pattern: ["lambda/**/*.ts"]
      ignore: ["./serverles/**/*", ".build"]

plugins:
  - serverless-esbuild

resources:
  Resources:
    FrontendDistBucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: ${self:custom.app.bucketName}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true

    AssetManagementLambdaRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: ${self:provider.stage}-AssetManagementLambdaRole

        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole

        Policies:
          - PolicyName: ${self:provider.stage}-AssetManagementLambdaPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - { Fn::Join: [":", ["arn:aws:logs", { Ref: "AWS::Region" }, { Ref: "AWS::AccountId" }, "log-group:/aws/lambda/*:*:*"]] }

                - Effect: Allow
                  Action:
                    - s3:ListBucket
                    - s3:GetObject
                    - s3:PutObject
                  Resource:
                    - { Fn::GetAtt: [FrontendDistBucket, Arn] }
                    - { Fn::Join: ["/", [{ Fn::GetAtt: [FrontendDistBucket, Arn] }, "*"]] }

  Outputs:
    assetsBucketName: { Value: "${self:custom.app.bucketName}" }
    assetsBucketId: { Value: "${self:custom.app.bucketId}" }
    assetsBucketDomain: { Value: { Fn::GetAtt: [FrontendDistBucket, RegionalDomainName] } }

outputs:
  AssetsBucketName: ${self:custom.app.bucketName}
  AssetsBucketId: ${self:custom.app.bucketId}
  AssetsBucketDomain: { Fn::GetAtt: [FrontendDistBucket, RegionalDomainName] }
