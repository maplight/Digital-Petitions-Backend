#set($data = $context.arguments.data)
#set($signature = $context.prev.result)

#set($approvedDelta = 0)
#set($rejectedDelta = 0)

#if ($context.info.fieldName == "approveSignature")
    #if ($signature.status == ${SIGNATURE_APPROVED_VERIFICATION_PENDING} || $signature.status == ${SIGNATURE_APPROVED})
        $util.error("This signature has been approved already", "BadRequest")
    #elseif ($signature.status == ${SIGNATURE_SUBMITTED} || $signature.status == ${SIGNATURE_VERIFIED})
        #set($statusInc = 1)
        #set($statusAltInc = 10)

        #set($approvedDelta = 1)
    #else
        #set($statusInc = -1)
        #set($statusAltInc = -10)

        #set($approvedDelta = 1)
        #set($rejectedDelta = -1)
    #end
#else
    #if ($signature.status == ${SIGNATURE_REJECTED_VERIFICATION_PENDING} || $signature.status == ${SIGNATURE_REJECTED})
        $util.error("This signature has been rejected already", "BadRequest")
    #elseif ($signature.status == ${SIGNATURE_SUBMITTED} || $signature.status == ${SIGNATURE_VERIFIED})
        #set($statusInc = 2)
        #set($statusAltInc = 20)

        #set($rejectedDelta = 1)
    #else
        #set($statusInc = 1)
        #set($statusAltInc = 10)

        #set($approvedDelta = -1)
        #set($rejectedDelta = 1)
    #end
#end

## build signature update expression

#set($signatureUpdateExpression = "ADD #signatureStatus :delta, #signatureStatusAlt :deltaAlt")
#set($signatureUpdateExpressionNames = { "#signatureStatus": "status", "#signatureStatusAlt": "statusAlt" })
#set($signatureUpdateExpressionValues = { ":delta": $statusInc, ":deltaAlt": $statusAltInc })

## build signature update condition expression

#set($signatureUpdateConditionExpression = "#target = :target")
#set($signatureUpdateConditionExpressionNames = { "#target": "target" })
#set($signatureUpdateConditionExpressionValues = { ":target": $signature.target })

## build petition update expression

#set($petitionUpdateExpression = "ADD #approved :approvedDelta, #rejected :rejectedDelta")
#set($petitionUpdateExpressionNames = { "#approved": "approvedSignatures", "#rejected": "rejectedSignatures" })
#set($petitionUpdateExpressionValues = { ":approvedDelta": $approvedDelta, ":rejectedDelta": $rejectedDelta })

{
    "version": "2018-05-29",
    "operation": "TransactWriteItems",
    "transactItems": [
        {
            "table": "${SIGNATURE_TABLE}",
            "operation": "UpdateItem",
            "key": { "PK": $util.dynamodb.toDynamoDBJson($data.signatureId) },
            "update": {
                "expression": "${signatureUpdateExpression}",
                "expressionNames": $util.toJson($signatureUpdateExpressionNames),
                "expressionValues": $util.dynamodb.toMapValuesJson($signatureUpdateExpressionValues)
            },
            "condition": {
                "expression": "${signatureUpdateConditionExpression}",
                "expressionNames": $util.toJson($signatureUpdateConditionExpressionNames),
                "expressionValues": $util.dynamodb.toMapValuesJson($signatureUpdateConditionExpressionValues)
            }
        },
        {
            "table": "${PETITION_TABLE}",
            "operation": "UpdateItem",
            "key": { "PK": $util.dynamodb.toDynamoDBJson($signature.target) },
            "update": {
                "expression": "${petitionUpdateExpression}",
                "expressionNames": $util.toJson($petitionUpdateExpressionNames),
                "expressionValues": $util.dynamodb.toMapValuesJson($petitionUpdateExpressionValues)
            }
        }
    ]
}