#set($data = $context.arguments.data)

#if ($context.info.fieldName == "batchApproveSignatures")
    #set($statusInc = 1)
    #set($statusAltInc = 10)
    #set($updateSummaryField = "approvedSignatures")
#else
    #set($statusInc = 2)
    #set($statusAltInc = 20)
    #set($updateSummaryField = "rejectedSignatures")
#end

## build signature update expression

#set($signatureUpdateExpression = "ADD #signatureStatus :delta, #signatureStatusAlt :deltaAlt")
#set($signatureUpdateExpressionNames = { "#signatureStatus": "status", "#signatureStatusAlt": "statusAlt" })
#set($signatureUpdateExpressionValues = { ":delta": $statusInc, ":deltaAlt": $statusAltInc })

## build signature update condition expression

#set($signatureUpdateConditionExpression = "#target = :target AND (#previousStatus = :submitted OR #previousStatus = :verified)")
#set($signatureUpdateConditionExpressionNames = { "#previousStatus": "status", "#target": "target" })
#set($signatureUpdateConditionExpressionValues = { ":submitted": ${SIGNATURE_SUBMITTED}, ":verified": ${SIGNATURE_VERIFIED}, ":target": $data.petition })

## build petition update expression

#set($petitionUpdateExpression = "ADD #targetField :targetValue")
#set($petitionUpdateExpressionNames = { "#targetField": "${updateSummaryField}" })
#set($petitionUpdateExpressionValues = { ":targetValue": $data.targets.size() })

{
    "version": "2018-05-29",
    "operation": "TransactWriteItems",
    "transactItems": [
#foreach ($signatureId in $data.targets)
        {
            "table": "${SIGNATURE_TABLE}",
            "operation": "UpdateItem",
            "key": { "PK": $util.dynamodb.toDynamoDBJson($signatureId) },
            "update": {
                "expression": "${signatureUpdateExpression}",
                "expressionNames": $util.toJson($signatureUpdateExpressionNames),
                "expressionValues": $util.dynamodb.toMapValuesJson($signatureUpdateExpressionValues)
            },
            "condition": {
                "expression": "${signatureUpdateConditionExpression}",
                "expressionNames": $util.toJson($signatureUpdateConditionExpressionNames),
                "expressionValues": $util.dynamodb.toMapValuesJson($signatureUpdateConditionExpressionValues)
            }
        },
#end
        {
            "table": "${PETITION_TABLE}",
            "operation": "UpdateItem",
            "key": { "PK": $util.dynamodb.toDynamoDBJson($data.petition) },
            "update": {
                "expression": "${petitionUpdateExpression}",
                "expressionNames": $util.toJson($petitionUpdateExpressionNames),
                "expressionValues": $util.dynamodb.toMapValuesJson($petitionUpdateExpressionValues)
            }
        }
    ]
}