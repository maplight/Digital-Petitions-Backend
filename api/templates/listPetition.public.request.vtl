#set($query = $context.arguments.query)

#set($expression = "#type = :type")
#set($expressionNames = { "#type": "type", "#status": "status" })
#set($expressionValues = { ":type": $util.defaultIfNull(${query.type}, "ISSUE") })

#set($status = $util.defaultIfNull(${query.status}, "ACTIVE"))
#set($limit = $util.defaultIfNull(${query.limit}, ${DEFAULT_PAGE_SIZE}))

#if ($limit < ${DEFAULT_PAGE_SIZE})
    #set($limit = ${DEFAULT_PAGE_SIZE})
#end

#if ($status == "INACTIVE")
    #set($expression = "${expression} AND #status BETWEEN :lo AND :hi")

    $util.quiet($expressionValues.put(":lo", "${STATUS_INACTIVE_PUBLIC_LOWER_BOUND}"))
    $util.quiet($expressionValues.put(":hi", "${STATUS_INACTIVE_UPPER_BOUND}"))
#else
    #set($expression = "${expression} AND #status = :status")

    #set($statusMap = {
        "ACTIVE": "${STATUS_ACTIVE}",
        "QUALIFIED": "${STATUS_QUALIFIED}",
        "NOT_QUALIFIED": "${STATUS_NOT_QUALIFIED}"
    })

    $util.quiet($expressionValues.put(":status", "${statusMap[$status]}"))
#end

{
    "version": "2018-05-29",
    "operation": "Query",
    "index": "byTypeIndex",
    "limit": $limit,
    "scanIndexForward": true,
    "query": {
        "expression": "$expression",
        "expressionNames": $util.toJson($expressionNames),
        "expressionValues": $util.dynamodb.toMapValuesJson($expressionValues)
    }
#if ($query.cursor)
    ,"nextToken": "${query.cursor}"
#end
}