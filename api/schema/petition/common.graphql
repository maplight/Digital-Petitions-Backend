enum PetitionType {
    ISSUE,
    CANDIDATE
}

enum PetitionStatus {
    #----[NOT PUBLIC, INACTIVE]----#
    NEW,
    CANCELED,
    WITHDRAWN,
    REJECTED,
    
    #----[PUBLIC, INACTIVE]--------#
    QUALIFIED,
    NOT_QUALIFIED,
    
    #----[PUBLIC, ACTIVE]----------#
    ACTIVE,
}

type SignatureSummary @aws_iam @aws_cognito_user_pools {
    required: Int!
    approved: Int!

    deadline: AWSDateTime

    submitted: Int!
    @aws_cognito_user_pools(cognito_groups: ["AdminGroup", "CityStaffGroup"])
}

interface Petition {
    PK: ID!

    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
    version: Int!

    type: PetitionType!
    status: PetitionStatus!
    owner: ID!

    signatureSummary: SignatureSummary
}

type PetitionConnection @aws_iam @aws_cognito_user_pools {
    items: [Petition!]!
    token: ID
}

enum PetitionListStatusCheck {
    ACTIVE,
    INACTIVE,
    QUALIFIED,
    NOT_QUALIFIED
}

enum OwnedPetitionListStatusCheck {
    NEW,
    CANCELED,
    WITHDRAWN,
    REJECTED,
    QUALIFIED,
    NOT_QUALIFIED,
    ACTIVE,
    INACTIVE
}

input PublicPetitionListInput {
    type: PetitionType
    status: PetitionListStatusCheck
    limit: Int
    cursor: ID
}

input OwnedPetitionListInput {
    owner: ID!
    status: OwnedPetitionListStatusCheck
    limit: Int
    cursor: ID
}

input TargetPetitionInput {
    expectedVersion: Int!
    PK: ID!
}
