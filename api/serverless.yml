app: e-signatures
org: maplighttech
service: backend-api

frameworkVersion: '3'

functions:
  echo:
    handler: lambda/echo/index.handler

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, "dev"}

custom:
  myUserPoolId: ${param:userPoolId, output:backend-auth.UserPoolId}
  myUserPoolClientId: ${param:userPoolClientId, output:backend-auth.UserPoolClientId}
  myAssetsBucketName: ${param:assetsBucketName, output:frontend-assets.AssetsBucketName}

  myPetitionTableName: ${param:petitionTableName, output:backend-data.PetitionsTableName}
  myPetitionTableArn: ${param:petitionTableArn, output:backend-data.PetitionsTableArn}

  mySignatureTableName: ${param:signatureTableName, output:backend-data.SignaturesTableName}
  mySignatureTableArn: ${param:signatureTableArn, output:backend-data.SignaturesTableArn}

  mySiteConfigTableName: ${param:siteConfigTableName, output:backend-data.SiteConfigTableName}
  mySiteConfigTableArn: ${param:siteConfigTableArn, output:backend-data.SiteConfigTableArn}

  myAdminLambdaArn: ${param:adminLambdaArn, output:backend-auth.AdminLambdaArn}
  myAssetsLambdaArn: ${param:assetsLambdaArn, output:frontend-assets.AssetsLambdaArn}

  mySignatureVerificationLambdaArn: ${param:signatureVerificationLambdaArn, output:backend-signature-validation.SignatureValidationLambdaArn}

  esbuild:
    minify: true
    watch:
      pattern: ["lambda/**/*.ts"]
      ignore: ["./serverles/**/*", ".build"]

  appSync:
    name: ${self:provider.stage}-ESignaturesAPI

    schema: "./schema/**/*.graphql"

    logConfig:
      level: ERROR

    authenticationType: AWS_IAM

    additionalAuthenticationProviders:
      - authenticationType: AMAZON_COGNITO_USER_POOLS
        userPoolConfig:
          userPoolId: ${self:custom.myUserPoolId}

    mappingTemplatesLocation: templates
    defaultMappingTemplates:
      request: echo.request.vtl
      response: echo.response.vtl

    substitutions: ${file(./templates/subs.yml)}

    mappingTemplates:
      - ${file(./templates/echo.yml)}
      - ${file(./templates/petitioner/submitPetition.issue.yml)}
      - ${file(./templates/petitioner/editPetition.issue.yml)}
      - ${file(./templates/petitioner/submitPetition.candidate.yml)}
      - ${file(./templates/petitioner/editPetition.candidate.yml)}
      - ${file(./templates/petitioner/withdrawOrCancelPetition.yml)}
      - ${file(./templates/staff/approveOrRejectPetition.yml)}
      - ${file(./templates/staff/createUser.yml)}
      - ${file(./templates/staff/deleteUser.yml)}
      - ${file(./templates/staff/selectUser.yml)}
      - ${file(./templates/staff/updateUserAccess.yml)}
      - ${file(./templates/staff/approveOrRejectSignature.yml)}
      - ${file(./templates/listPetition.byType.yml)}
      - ${file(./templates/listPetition.byOwner.yml)}
      - ${file(./templates/petition.byId.yml)}
      - ${file(./templates/signatures.byPetition.yml)}
      - ${file(./templates/signatures.petitionSummary.yml)}
      - ${file(./templates/admin/siteConfiguration.yml)}
      - ${file(./templates/admin/siteConfiguration.update.yml)}
      - ${file(./templates/admin/siteResource.listByType.yml)}
      - ${file(./templates/admin/siteResource.versionByType.yml)}
      - ${file(./templates/admin/siteResource.uploadUrlByType.yml)}
      - ${file(./templates/endorse/matchVoter.yml)}
      - ${file(./templates/endorse/verifySignature.yml)}
      - ${file(./templates/endorse/submitCode.yml)}
      - ${file(./templates/account.resendCode.yml)}

    functionConfigurations:
      - ${file(./templates/admin/siteConfiguration.updateValidation.yml)}
      - ${file(./templates/admin/siteConfiguration.updateResolution.yml)}
      - ${file(./templates/endorse/verifySignature.checkForDuplication.yml)}
      - ${file(./templates/endorse/verifySignature.processVerification.yml)}
      - ${file(./templates/endorse/verifySignature.storeSignature.yml)}
      - ${file(./templates/endorse/verifySignature.validatePetition.yml)}
      - ${file(./templates/endorse/submitCode.lookupSignatureId.yml)}
      - ${file(./templates/endorse/submitCode.updateSignature.yml)}
      - ${file(./templates/staff/approveOrRejectSignature.fetchSignature.yml)}
      - ${file(./templates/staff/approveOrRejectSignature.updateSignature.yml)}

    dataSources:
      - ${file(./data/petitions.yml)}
      - ${file(./data/echo.yml)}
      - ${file(./data/signatures.yml)}
      - ${file(./data/signatures-verification.yml)}
      - ${file(./data/users.yml)}
      - ${file(./data/none.yml)}
      - ${file(./data/assets.yml)}

    xrayEnabled: true
    # wafConfig:
    #   rules:
    #     - throttle: 100
    #     - disableIntrospection

plugins:
  - serverless-appsync-plugin
  - serverless-esbuild

resources:
  Outputs:
    apiId: { Value: { Ref: GraphQlApi } }
    apiEndpoint: { Value: { Fn::GetAtt: [GraphQlApi, GraphQLUrl] } }

outputs:
  ApiId: { Ref: GraphQlApi }
  ApiEndpoint: { Fn::GetAtt: [GraphQlApi, GraphQLUrl] }
