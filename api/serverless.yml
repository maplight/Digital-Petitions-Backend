app: e-signatures
org: maplighttech
service: backend-api

frameworkVersion: '3'

functions:
  echo:
    handler: lambda/echo/index.handler

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, "dev"}

custom:
  myUserPoolId: ${param:userPoolId, output:backend-auth.UserPoolId}
  myPetitionTableName: ${param:petitionTableName, output:backend-data.PetitionsTableName}
  myPetitionTableArn: ${param:petitionTableArn, output:backend-data.PetitionsTableArn}

  esbuild:
    minify: true
    watch:
      pattern: ["lambda/**/*.ts"]
      ignore: ["./serverles/**/*", ".build"]

  appSync:
    name: ${self:provider.stage}-ESignaturesAPI

    schema: "./schema/**/*.graphql"

    logConfig:
      level: ERROR

    authenticationType: AWS_IAM

    additionalAuthenticationProviders:
      - authenticationType: AMAZON_COGNITO_USER_POOLS
        userPoolConfig:
          userPoolId: ${self:custom.myUserPoolId}

    mappingTemplatesLocation: templates
    defaultMappingTemplates:
      request: echo.request.vtl
      response: echo.response.vtl

    substitutions:
      defaultPageSize: 10

      # status values
      STATUS_NEW: "A1"
      STATUS_CANCELED: "A2"
      STATUS_WITHDRAWN: "A3"
      STATUS_REJECTED: "A4"
      STATUS_NOT_QUALIFIED: "B1"
      STATUS_QUALIFIED: "B2"
      STATUS_ACTIVE: "C1"

      # bounds for range queries
      STATUS_INACTIVE_PUBLIC_LOWER_BOUND: "B"
      STATUS_INACTIVE_UPPER_BOUND: "C"
      STATUS_INACTIVE_LOWER_BOUND: "A2"

    mappingTemplates:
      - ${file(./templates/echo.yml)}
      - ${file(./templates/petitioner/submitPetition.issue.yml)}
      - ${file(./templates/petitioner/editPetition.issue.yml)}
      - ${file(./templates/petitioner/submitPetition.candidate.yml)}
      - ${file(./templates/petitioner/editPetition.candidate.yml)}
      - ${file(./templates/staff/approvePetition.yml)}
      - ${file(./templates/staff/rejectPetition.yml)}
      - ${file(./templates/listPetition.public.yml)}
      - ${file(./templates/listPetition.byOwner.yml)}

    dataSources:
      - ${file(./data/petitions.yml)}
      - ${file(./data/echo.yml)}

    xrayEnabled: true
    # wafConfig:
    #   rules:
    #     - throttle: 100
    #     - disableIntrospection

plugins:
  - serverless-appsync-plugin
  - serverless-esbuild

resources:
  Outputs:
    apiId: { Value: { Ref: GraphQlApi } }
    apiEndpoint: { Value: { Fn::GetAtt: [GraphQlApi, GraphQLUrl] } }

outputs:
  ApiId: { Ref: GraphQlApi }
  ApiEndpoint: { Fn::GetAtt: [GraphQlApi, GraphQLUrl] }
