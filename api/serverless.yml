app: e-signatures
org: maplighttech
service: backend-api

frameworkVersion: '3'

functions:
  echo:
    handler: lambda/echo/index.handler

custom:
  esbuild:
    minify: true
    watch:
      pattern: ["lambda/**/*.ts"]
      ignore: ["./serverles/**/*", ".build"]

  appSync:
    name: ${self:provider.stage}-ESignaturesAPI

    authenticationType: AWS_IAM

    additionalAuthenticationProviders:
      - authenticationType: AMAZON_COGNITO_USER_POOLS
        userPoolConfig:
          userPoolId: ${output:backend-auth.UserPoolId}

    mappingTemplatesLocation: templates
    defaultMappingTemplates:
      request: echo.request.vtl
      response: echo.response.vtl

    mappingTemplates:
      - dataSource: EchoDataSource
        type: Query
        field: publicType

      - dataSource: EchoDataSource
        type: Query
        field: adminType

      - dataSource: EchoDataSource
        type: Query
        field: petitionerType

      - $(file(./templates/submitIssuePetition.yml)

    dataSources:
      - type: AWS_LAMBDA
        name: EchoDataSource
        description: "A simple lambda datasource for testing"
        config:
          functionName: echo
      - ${file(./data/petitions.yml)}

    xrayEnabled: true
    wafConfig:
      rules:
        - throttle: 100
        - disableIntrospection

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, "dev"}

plugins:
  - serverless-appsync-plugin
  - serverless-esbuild

outputs:
  ApiId: { Ref: GraphQlApi }